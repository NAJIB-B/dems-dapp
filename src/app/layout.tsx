import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ReactQueryProvider } from "./react-query-provider";
import {TRPCReactProvider}from "../trpc/react"
import ParaModal from "@/components/para/paraModal";
import Link from "next/link";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

	const links = [
		{
			link: "estates",
			name: "Estates"
		},
		{
			link: "my-estate",
			name: "My Estate"
		},
		{
			link: "about-us",
			name: "About Us"
		}
];
	
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
		 <ReactQueryProvider>
			<TRPCReactProvider>
			<div>
      <div className="flex bg-base-300 dark:text-neutral-content flex-col md:flex-row space-y-2 md:space-y-0 py-4 bg-blue-500 px-8">
        <div className="flex-1">
          <Link className="btn btn-ghost normal-case text-xl" href="/">
            <h1 className="text-4xl font-extrabold text-gray-800 tracking-wide uppercase text-center">
              üè† Estate<span className="text-white">DAO</span>
            </h1>
          </Link>
          <ul className="flex flex-row px-1 space-x-2 gap-8">
            {links.map((link, key) => (
              <li key={key}>
                <Link href={link.link} className="hover:text-blue-300 text-white font-mono font-semibold">{link.name}</Link>
              </li>
            ))}
          </ul>
        </div>
        <div className="flex-none space-x-2">
          <ParaModal></ParaModal>
        </div>
      </div>
	  {children}
    </div>
		
		   </TRPCReactProvider>
		   </ReactQueryProvider>
   
      
      </body>
    </html>
  );
}
